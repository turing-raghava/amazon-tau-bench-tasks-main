{
  "env": "hr_payroll",
  "model_provider": "openai",
  "model": "o4-mini",
  "num_trials": 3,
  "temperature": 1,
  "interface_num": 4,
  "task": {
    "user_id": "ccc6294e-c7ab-4646-822b-b34b75004466",
    "instruction": "You are Damon Bishop and your user ID is ccc6294e-c7ab-4646-822b-b34b75004466. You are managing the workforce for the organization with ID f95a73f0-4d7f-4a87-981b-24ffa1b9b66d. You would like to review all workers under this organization and locate the worker whose status is active, currency is SEK, and rate is 10816.33. You would like to update this workerâ€™s active contract terms by setting the type to annual and changing the rate to 1465000. You need to retrieve the payroll summary, along with the locale and timezone settings of the user linked to the updated contract, for documentation. You would like to reject a previously submitted reimbursement that is deemed invalid, and you need to verify the reimbursement status to confirm the rejection has been properly registered. You need to check the active virtual cards linked to the organization. You want to hire a new employee, Brandon Martin, with the email bradmartin@gmail.com and timezone America/Toronto, and you would like to onboard this new employee to the same organization. You would also like to record the locale and timezone settings of the new employee for record keeping.",
    "actions": [
      {
        "name": "list_workers_by_org",
        "arguments": {
          "org_id": "f95a73f0-4d7f-4a87-981b-24ffa1b9b66d"
        }
      },
      {
        "name": "fetch_active_contracts_by_worker",
        "arguments": {
          "worker_id": "7e0f78bd-02f7-4646-a88f-a81ba90e1ed4"
        }
      },
      {
        "name": "update_contract_pay_terms",
        "arguments": {
          "contract_id": "494d4ef8-e342-4785-86ae-54d9230b0f12",
          "new_rate": "1465000",
          "rate_type": "annual"
        }
      },
      {
        "name": "get_payroll_summary_by_user",
        "arguments": {
          "worker_id": "7e0f78bd-02f7-4646-a88f-a81ba90e1ed4",
          "contract_id": "494d4ef8-e342-4785-86ae-54d9230b0f12"
        }
      },
      {
        "name": "get_user_locale_and_timezone",
        "arguments": {
          "worker_id": "7e0f78bd-02f7-4646-a88f-a81ba90e1ed4"
        }
      },
      {
        "name": "list_open_reimbursements",
        "arguments": {
          "worker_id": "7e0f78bd-02f7-4646-a88f-a81ba90e1ed4",
          "contract_id": "494d4ef8-e342-4785-86ae-54d9230b0f12",
          "status": "submitted"
        }
      },
      {
        "name": "reject_reimbursement_request",
        "arguments": {
          "reimbursement_id": "ff7b84b5-9a0e-4ab7-9e84-5d128f9ec91d",
          "reason": "invalid request"
        }
      },
      {
        "name": "get_reimbursement_status",
        "arguments": {
          "reimbursement_id": "ff7b84b5-9a0e-4ab7-9e84-5d128f9ec91d"
        }
      },
      {
        "name": "list_virtual_cards_by_org",
        "arguments": {
          "org_id": "f95a73f0-4d7f-4a87-981b-24ffa1b9b66d"
        }
      },
      {
        "name": "create_user_account",
        "arguments": {
          "first_name": "Brandon",
          "last_name": "Martin",
          "email": "bradmartin@gmail.com",
          "role": "employee",
          "timezone": "America/Toronto"
        }
      },
      {
        "name": "initiate_worker_onboarding",
        "arguments": {
          "org_id": "f95a73f0-4d7f-4a87-981b-24ffa1b9b66d",
          "user_id": "from create_user_account"
        }
      },
      {
        "name": "get_user_locale_and_timezone",
        "arguments": {
          "user_id": "from create_user_account"
        }
      }
    ],
    "outputs": [
      "494d4ef8-e342-4785-86ae-54d9230b0f12",
      "ff7b84b5-9a0e-4ab7-9e84-5d128f9ec91d"
    ],
    "edges": [
      {
        "from": "instruction",
        "to": "list_workers_by_org",
        "connection": {
          "output": "org_id",
          "input": "org_id"
        }
      },
      {
        "from": "list_workers_by_org",
        "to": "fetch_active_contracts_by_worker",
        "connection": {
          "output": "worker_id",
          "input": "worker_id"
        }
      },
      {
        "from": "fetch_active_contracts_by_worker",
        "to": "update_contract_pay_terms",
        "connection": {
          "output": "contract_id",
          "input": "contract_id"
        }
      },
      {
        "from": "instruction",
        "to": "update_contract_pay_terms",
        "connection": {
          "output": "new_rate, rate_type",
          "input": "new_rate, rate_type"
        }
      },
      {
        "from": "list_workers_by_org",
        "to": "get_payroll_summary_by_user",
        "connection": {
          "output": "worker_id",
          "input": "worker_id"
        }
      },
      {
        "from": "fetch_active_contracts_by_worker",
        "to": "get_payroll_summary_by_user",
        "connection": {
          "output": "contract_id",
          "input": "contract_id"
        }
      },
      {
        "from": "get_payroll_summary_by_user",
        "to": "get_user_locale_and_timezone",
        "connection": {
          "output": "worker_id",
          "input": "worker_id"
        }
      },
      {
        "from": "list_workers_by_org",
        "to": "list_open_reimbursements",
        "connection": {
          "output": "worker_id",
          "input": "worker_id"
        }
      },

      {
        "from": "fetch_active_contracts_by_worker",
        "to": "list_open_reimbursements",
        "connection": {
          "output": "contract_id",
          "input": "contract_id"
        }
      },
      {
        "from": "instruction",
        "to": "list_open_reimbursements",
        "connection": {
          "input": "status",
          "output": "status"
        }
      },
      {
        "from": "list_open_reimbursements",
        "to": "reject_reimbursement_request",
        "connection": {
          "input": "reimbursement_id",
          "output": "reimbursement_id"
        }
      },
      {
        "from": "instruction",
        "to": "reject_reimbursement_request",
        "connection": {
          "input": "reason",
          "output": "reason"
        }
      },
      {
        "from": "reject_reimbursement_request",
        "to": "get_reimbursement_status",
        "connection": {
          "input": "reimbursement_id",
          "output": "reimbursement_id"
        }
      },
      {
        "from": "instruction",
        "to": "list_virtual_cards_by_org",
        "connection": {
          "input": "org_id",
          "output": "org_id"
        }
      },
      {
        "from": "instruction",
        "to": "create_user_account",
        "connection": {
          "input": "first_name, last_name, email, role, timezone",
          "output": "first_name, last_name, email, role, timezone"
        }
      },
      {
        "from": "list_workers_by_org",
        "to": "initiate_worker_onboarding",
        "connection": {
          "input": "org_id",
          "output": "org_id"
        }
      },
      {
        "from": "create_user_account",
        "to": "initiate_worker_onboarding",
        "connection": {
          "input": "user_id",
          "output": "user_id"
        }
      },
      {
        "from": "create_user_account",
        "to": "get_user_locale_and_timezone",
        "connection": {
          "input": "user_id",
          "output": "user_id"
        }
      }
    ],
    "num_edges": 18
  }
}
