{
    "env": "hr_payroll",
    "model_provider": "openai", 
    "model": "o4-mini",
    "num_trials": 3,
    "temperature": 1,
    "interface_num": 2,
    "task": {
        "user_id": "5bff18c9-7559-4198-9ece-8c84e893f90c",
        "instruction": "You are a payroll officer (email: dsanders@example.net) overseeing financial reconciliation for Kendra Peterson (email: kylewashington@example.com). You want to ensure that any failed payments over 500 GBP have been addressed appropriately, including issuing replacements if necessary. Her GBP-denominated contracts should be consistent with the payment records, and any related documents should be approved as needed to complete the reconciliation process.",
        "actions": [
            {
                "name": "find_user",
                "arguments": {
                    "email": "kylewashington@example.com"
                },
                "output": {
                    "user_id": "5bff18c9-7559-4198-9ece-8c84e893f90c"
                }
            },
            {
                "name": "get_payments",
                "arguments": {
                    "user_id": "5bff18c9-7559-4198-9ece-8c84e893f90c",
                    "status": "failed",
                    "min_amount": 500,
                    "currency": "GBP"
                },
                "output": {
                    "user_id": "5bff18c9-7559-4198-9ece-8c84e893f90c",
                    "invoice_id": "3c52b51b-a3fe-4a9f-9359-0d54d9095d2b",
                    "amount": 1910.64,
                    "currency": "GBP"
                }
            },
            {
                "name": "create_payment",
                "arguments": {
                    "user_id": "5bff18c9-7559-4198-9ece-8c84e893f90c",
                    "invoice_id": "3c52b51b-a3fe-4a9f-9359-0d54d9095d2b",
                    "amount": 1910.64,
                    "currency": "GBP"
                },
                "output": {
                    "user_id": "5bff18c9-7559-4198-9ece-8c84e893f90c",
                    "currency": "GBP"
                }
            },
            {
                "name": "get_contracts",
                "arguments": {
                    "user_id": "5bff18c9-7559-4198-9ece-8c84e893f90c",
                    "currency": "GBP"
                },
                "output": {
                    "document_id": "34210fef-5a2b-4d48-aa51-d722bf3e1358"
                }
            },
            {
                "name": "update_document_status",
                "arguments": {
                    "document_id": "34210fef-5a2b-4d48-aa51-d722bf3e1358",
                    "new_status": "approved"
                },
                "output": {
                    "new_status": "approved"
                }
            }
        ],
        "outputs": [
            "5bff18c9-7559-4198-9ece-8c84e893f90c",
            "34210fef-5a2b-4d48-aa51-d722bf3e1358",
            "d0ea4cf1-d37f-4570-b20f-91c5563e4aeb",
            "approved"
        ],
        "edges": [
            {
                "from": "instruction",
                "to": "find_user",
                "connection": {
                    "input": "email",
                    "output": "email"
                }
            },
            {
                "from": "find_user",
                "to": "get_payments",
                "connection": {
                    "input": "user_id",
                    "output": "user_id"
                }
            },
            {
                "from": "instruction",
                "to": "get_payments",
                "connection": {
                    "input": "status, min_amount, currency",
                    "output": "status, min_amount, currency"
                }
            },
            {
                "from": "get_payments",
                "to": "create_payment",
                "connection": {
                    "input": "user_id, invoice_id, amount, currency",
                    "output": "user_id, invoice_id, amount, currency"
                }
            },
            {
                "from": "create_payment",
                "to": "get_contracts",
                "connection": {
                    "input": "user_id, currency",
                    "output": "user_id, currency"
                }
            },
            {
                "from": "get_contracts",
                "to": "update_document_status",
                "connection": {
                    "input": "document_id",
                    "output": "document_id"
                }
            },
            {
                "from": "instruction",
                "to": "update_document_status",
                "connection": {
                    "input": "new_status",
                    "output": "new_status"
                }
            }
        ],
        "num_edges": 7
    }
}
