{
  "env": "hr_payroll",
  "model_provider": "openai",
  "model": "o4-mini",
  "num_trials": 3,
  "temperature": 1,
  "interface_num": 3,
  "task": {
    "user_id": "8ca8d58-df27-4e23-a2d2-9ce1b1fe4e58",
    "instruction": "You are a finance system auditor reviewing cross-border compliance for international contract payments. Begin by listing all organizations that operate in the 'Africa/Dar_es_Salaam' timezone. For each organization, retrieve the list of active workers, and for each active worker, fetch their current contracts and select the most recent one. For workers with a current contract, filter their associated 'unpaid' and 'overdue' invoices. For each unpaid invoice, process a reimbursement request for the same amount using the reason 'Payment block workaround', and then mark the invoice as paid. For each overdue invoice, create a new invoice for the same worker using the same amount and organization as the overdue one, but set the due date to '2025-07-10', status to 'unpaid', and currency to match the selected contract's currency of the worker; then process a reimbursement for the same amount using the reason 'Backdated dues reconciled', and finally mark both the original overdue invoice and the new one as paid.",
    "actions": [
      {
        "name": "get_organizations",
        "arguments": {
          "timezone": "Africa/Dar_es_Salaam"
        }
      },
      {
        "name": "list_active_workers",
        "arguments": {
          "organization_id": "e8ca8d58-df27-4e23-a2d2-9ce1b1fe4e58"
        }
      },
      {
        "name": "get_worker_contract_summary",
        "arguments": {
          "worker_id": "7933db1b-0d82-4179-8308-615ce2d2604a"
        }
      },
      {
        "name": "get_filtered_invoices",
        "arguments": {
          "worker_id": "7933db1b-0d82-4179-8308-615ce2d2604a",
          "status": "unpaid"
        }
      },
      {
        "name": "get_filtered_invoices",
        "arguments": {
          "worker_id": "7933db1b-0d82-4179-8308-615ce2d2604a",
          "status": "overdue"
        }
      },
      {
        "name": "process_reimbursement_request",
        "arguments": {
          "worker_id": "7933db1b-0d82-4179-8308-615ce2d2604a",
          "amount": 6236.18,
          "reason": "Payment block workaround"
        }
      },
      {
        "name": "mark_invoice_as_paid",
        "arguments": {
          "invoice_id": "39d4799c-9fea-4203-8f61-e2e31c74fbea"
        }
      },
      {
        "name": "create_new_invoice",
        "arguments": {
          "worker_id": "7933db1b-0d82-4179-8308-615ce2d2604a",
          "organization_id": "817907fd-8072-443d-a4e9-04fd1fb66c22",
          "amount": 2723.18,
          "currency": "BRL",
          "due_date": "2025-07-10"
        }
      },
      {
        "name": "process_reimbursement_request",
        "arguments": {
          "worker_id": "7933db1b-0d82-4179-8308-615ce2d2604a",
          "amount": 2723.18,
          "reason": "Backdated dues reconciled"
        }
      },
      {
        "name": "mark_invoice_as_paid",
        "arguments": {
          "invoice_id": "4eb1f841-ef13-4c5e-a157-28c6b128cf2b"
        }
      },
      {
        "name": "mark_invoice_as_paid",
        "arguments": {
          "invoice_id": "new_invoice_id"
        }
      }
    ],
    "outputs": [
      "e8ca8d58-df27-4e23-a2d2-9ce1b1fe4e58",
      "7933db1b-0d82-4179-8308-615ce2d2604a",
      "39d4799c-9fea-4203-8f61-e2e31c74fbea",
      "4eb1f841-ef13-4c5e-a157-28c6b128cf2b",
      "6236.18",
      "2723.18"
    ],
    "edges": [
      {
        "from": "instruction",
        "to": "get_organizations",
        "connection": {
          "input": "timezone",
          "output": "timezone"
        }
      },
      {
        "from": "get_organizations",
        "to": "list_active_workers",
        "connection": {
          "input": "organization_id",
          "output": "organization_id"
        }
      },
      {
        "from": "list_active_workers",
        "to": "get_worker_contract_summary",
        "connection": {
          "input": "worker_id",
          "output": "worker_id"
        }
      },
      {
        "from": "get_worker_contract_summary",
        "to": "get_filtered_invoices",
        "connection": {
          "input": "worker_id",
          "output": "worker_id"
        }
      },
      {
        "from": "instruction",
        "to": "get_filtered_invoices",
        "connection": {
          "input": "status",
          "output": "status"
        }
      },
      {
        "from": "get_filtered_invoices",
        "to": "process_reimbursement_request",
        "connection": {
          "input": "amount, worker_id",
          "output": "amount, worker_id"
        }
      },
      {
        "from": "instruction",
        "to": "process_reimbursement_request",
        "connection": {
          "input": "reason",
          "output": "reason"
        }
      },
      {
        "from": "get_filtered_invoices",
        "to": "mark_invoice_as_paid",
        "connection": {
          "input": "invoice_id",
          "output": "invoice_id"
        }
      },
      {
        "from": "get_worker_contract_summary",
        "to": "get_filtered_invoices",
        "connection": {
          "input": "worker_id",
          "output": "worker_id"
        }
      },
      {
        "from": "instruction",
        "to": "get_filtered_invoices",
        "connection": {
          "input": "status",
          "output": "status"
        }
      },
      {
        "from": "get_filtered_invoices",
        "to": "mark_invoice_as_paid",
        "connection": {
          "input": "invoice_id",
          "output": "invoice_id"
        }
      },
      {
        "from": "get_filtered_invoices",
        "to": "create_new_invoice",
        "connection": {
          "input": "worker_id, amount, organization_id",
          "output": "worker_id, amount, organization_id"
        }
      },
      {
        "from": "get_worker_contract_summary",
        "to": "create_new_invoice",
        "connection": {
          "input": "currency",
          "output": "currency"
        }
      },
      {
        "from": "instruction",
        "to": "create_new_invoice",
        "connection": {
          "input": "due_date",
          "output": "due_date"
        }
      },
      {
        "from": "create_new_invoice",
        "to": "process_reimbursement_request",
        "connection": {
          "input": "amount, worker_id",
          "output": "amount, worker_id"
        }
      },
      {
        "from": "instruction",
        "to": "process_reimbursement_request",
        "connection": {
          "input": "reason",
          "output": "reason"
        }
      },
      {
        "from": "create_new_invoice",
        "to": "mark_invoice_as_paid",
        "connection": {
          "input": "invoice_id",
          "output": "invoice_id"
        }
      }
    ],
    "num_edges": 17
  }
}