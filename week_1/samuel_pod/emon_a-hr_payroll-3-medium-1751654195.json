{
  "env": "hr_payroll",
  "model_provider": "openai",
  "model": "o4-mini",
  "num_trials": 3,
  "temperature": 1,
  "interface_num": 3,
  "task": {
    "user_id": "3c63872f-c282-4e00-9fe4-c1b329ded6f1",
    "instruction": "You are ensuring financial consistency during quarterly audits at Watson and Sons (org ID: 3c63872f-c282-4e00-9fe4-c1b329ded6f1) and conducting a mid-year compliance review. You'd like to begin by listing all active workers and extracting their worker_id and user_id. From that list, you want to identify the workers assigned to the team with ID 41ad5a60-5b69-4aa6-b432-4faea2418930. For each of those workers, you'd like to fetch all invoices linked to their worker_id and select the most recently issued invoice that is marked as paidâ€”regardless of which organization issued it. If such an invoice exists, you want to create a new invoice using the same amount and currency, with a due date of 2025-07-15, and associate it with Watson and Sons organization. You'd like to skip invoice creation for any workers who have no prior paid invoices. Then, for each worker who received a new invoice, you want to issue a virtual card using their previously extracted user_id, set the card limit to double the invoice amount, keep the same currency, and use the financial provider c13e9aa0-b4d9-4905-8649-f19a3daf3c76.",
    "actions": [
      {
        "name": "list_active_workers",
        "arguments": {
          "organization_id": "3c63872f-c282-4e00-9fe4-c1b329ded6f1"
        }
      },
      {
        "name": "fetch_team_assignment",
        "arguments": {
          "worker_id": "3b2b8c28-3be7-4c6a-bd62-282e7481e996"
        }
      },
      {
        "name": "fetch_team_assignment",
        "arguments": {
          "worker_id": "a198ff23-8dc5-4753-a362-f04300a592c6"
        }
      },
      {
        "name": "get_filtered_invoices",
        "arguments": {
          "worker_id": "3b2b8c28-3be7-4c6a-bd62-282e7481e996",
          "status": "paid"
        }
      },
      {
        "name": "create_new_invoice",
        "arguments": {
          "worker_id": "3b2b8c28-3be7-4c6a-bd62-282e7481e996",
          "organization_id":"3c63872f-c282-4e00-9fe4-c1b329ded6f1",
          "amount": 6374.91,
          "currency": "AUD",
          "due_date": "2025-07-15"
        }
      },
      {
        "name": "issue_virtual_card",
        "arguments": {
          "user_id": "ce2598ee-048b-4ce1-929b-3ba439a457b1",
          "limit": 12749.82,
          "currency": "AUD",
          "provider_id": "c13e9aa0-b4d9-4905-8649-f19a3daf3c76"
        }
      }
    ],
    "outputs": [
      "3c63872f-c282-4e00-9fe4-c1b329ded6f1",
      "39c2dcfc-bd7b-427c-ae07-5987f8d5ca4f",
      "a198ff23-8dc5-4753-a362-f04300a592c6",
      "6374.91",
      "12749.82",
      "c13e9aa0-b4d9-4905-8649-f19a3daf3c76"

    ],
        "edges": [
      {
        "from": "instruction",
        "to": "list_active_workers",
        "connection": {
          "input": "organization_id",
          "output": "organization_id"
        }
      },
      {
        "from": "list_active_workers",
        "to": "fetch_team_assignment",
        "connection": {
          "input": "worker_id",
          "output": "worker_id"
        }
      },
      {
        "from": "fetch_team_assignment",
        "to": "get_filtered_invoices",
        "connection": {
          "input": "worker_id",
          "output": "worker_id"
        }
      },
      {
        "from": "instruction",
        "to": "get_filtered_invoices",
        "connection": {
          "input": "status",
          "output": "status"
        }
      },
      {
        "from": "get_filtered_invoices",
        "to": "create_new_invoice",
        "connection": {
          "input": "worker_id, amount, currency",
          "output": "worker_id, amount, currency"
        }
      },
      {
        "from": "instruction",
        "to": "create_new_invoice",
        "connection": {
          "input": "organization_id, due_date",
          "output": "organization_id, due_date"
        }
      },
      {
        "from": "create_new_invoice",
        "to": "issue_virtual_card",
        "connection": {
          "input": "currency, limit",
          "output": "currency, limit"
        }
      },
      {
        "from": "list_active_workers",
        "to": "issue_virtual_card",
        "connection": {
          "input": "user_id",
          "output": "user_id"
        }
      },
      {
        "from": "instruction",
        "to": "issue_virtual_card",
        "connection": {
          "input": "provider_id",
          "output": "provider_id"
        }
      }
    ],
    "num_edges": 9
  }
}
